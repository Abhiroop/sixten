Javascript code generation
Lets and recursive definitions
Restructure codebase
ADTs and cases
  Parse
  Type-check
  Codegen
Laziness
Row polymorphism
  r : Row : Type
  {l = A} : {l : A} : Type

  Exists {X} (P : X -> Type) = {witness : x, proof : P witness}

  record {l : A | {l : B | r}} ?= record {l : A intersect B | r}
  intersection A B = {intersect : a, intersect : b}
    or not allowed?
  Parse
  Type-check
  Should make lenses?
  Codegen
Type classes
  Parse
  Type-check
  Codegen
Test suite
Mixfix definitions and noncompounds?
Better error messages
Modules
Inductive families
