data Unit = unit

data Tuple A B = tuple A B

data Nat = Z | S (Ptr Nat)

Vector : Ptr Nat -> Type -> Type
Vector (Ref Z) _ = Unit
Vector (Ref (S n)) a = Tuple a (Vector n a)

sumVec : forall n. Vector n Int -> Int
sumVec (Ref Z) unit = 0
sumVec (Ref (S n)) (tuple x xs) = addInt x (sumVec n xs)

three = Ref (S (Ref (S (Ref (S (Ref Z))))))

test = printInt (sumVec three (tuple 1 (tuple 2 (tuple 3 unit))))
