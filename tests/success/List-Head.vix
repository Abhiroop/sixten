deref : forall {t}. Ptr t -> t
deref p = case p of Ref t -> t

data List A where
  Nil : List A
  Cons : A -> Ptr (List A) -> List A

test : Ptr (List Size)
test = Ref (Cons 2 (Ref (Cons 3 (Ref (Cons 5 (Ref Nil))))))

head : {A : Type} -> Ptr (List A) -> A
head (Ref (Cons x _)) = x
head x = head x

x = printSize (head test)
