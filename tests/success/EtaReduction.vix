type Unit = unit

loop unit = loop unit

test1 = \x y z. x y z
test2 = \x y z. (loop unit) x y z
test3 = \(x : Int -> Int -> Int) (y z : Int). x y z
test4 = \(x y z : Int). (loop unit) x y z

test5 : Int -> Int -> Int -> Int
test5 = \(x y z : Int). (loop unit) x y z

type List a = Nil | Cons a (Ptr (List a))

map f (Ref Nil) = Ref Nil
map f (Ref (Cons x xs)) = Ref (Cons (f x) (map f xs))

main1 = map printInt (Ref (Cons (test1 (\x y. 3) 0 1) (Ref (Cons (test3 (\x y. 4) 0 1) (Ref Nil)))))
