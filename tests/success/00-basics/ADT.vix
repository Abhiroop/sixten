deref : forall {t}. Ptr t -> t
deref p = case p of Ref t -> t

type List a = Nil | Cons a (Ptr (List a))

type Bool
  = False
  | True

type Maybe a
  = Nothing
  | Just a

test : Ptr (List Int)
test = Ref (Cons 2 (Ref (Cons 3 (Ref (Cons 5 (Ref Nil))))))

sum xs = case deref xs of
  Nil -> 0
  Cons x xs -> addInt x (sum xs)

x = printInt (sum test)
