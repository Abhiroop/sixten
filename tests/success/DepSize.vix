deref : forall {A}. Ptr A -> A
deref p = case p of Ref a -> a

data Unit where
  unit : Unit

data Tuple A B where
  tuple : A -> B -> Tuple A B

data Nat where
  Zero : Nat
  Succ : Ptr Nat -> Nat

ntuple : forall (n : Ptr Nat). Type
ntuple n = case deref n of
  Zero -> Unit
  Succ n' -> Tuple Int (ntuple n')

test : ntuple (Ref (Succ (Ref (Succ (Ref Zero)))))
test = tuple 0 (tuple 1 unit)

lol = printInt case test of
  tuple 0 (tuple 1 unit) -> 111
  _ -> 222
