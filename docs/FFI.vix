addInt : Int -> Int -> Int
addInt x y = ${llvm:
    $register:result = add $type:Int $x, $y
    $return $typeOf:x $register:result
  }

subInt : Int -> Int -> Int
subInt x y = ${llvm:
    $register:result = sub $type:Int $x, $y
    $return $typeOf:x $register:result
  }

maxInt : Int -> Int -> Int
maxInt x y = ${llvm:
    $register:gt = icmp ugt $typeOf:x $x, $y
    $register:result = select i1 $register:gt, $typeOf:x $x, $typeOf:y $y
    $return $typeOf:x $register:result
  }

printInt : Int -> Int
printInt x = ${llvm:
    call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @size_t-format, i32 0, i32 0), $typeOf:x $x)
    $return $typeOf:x $x
  }

fail : {A : Type} -> A
fail = ${llvm:call void @exit(i32 1)}
